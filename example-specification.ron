(
    tests: [
        (
            // Id for the individual test.
            id: "1",
            // Number of verifier participants for the test.
            verifiers: 1,
            // (Optional) Number of replacement contributors for the
            // test. Default: 0
            replacement_contributors: 0,
            // What environment to use for the setup. Possible
            // options: `development`, `inner`, `outer`, `universal`.
            environment: development,
            // (Optional) Time limit for the test (in seconds).
            // Exceeding this will cause the test to fail. If set to
            // `None`  then there is no time limit. Default: `None`
            timout: Some(20),
            // (Optional) Whether to skip running this test. Default:
            // `false`.
            skip: false,
            // Configure the tests performed for each round of the
            // ceremony.
            rounds: [
                // Round 1
                (
                    // The contributors that will present for this round 
                    // of the ceremony.
                    contributors: [
                        // Contributor 1
                        (
                            // What kind of contributor to start.
                            // Possible options: `CLI`, `Browser`.
                            kind: CLI,
                            /// (Optional) Configure expected contributor drop.
                            drop: Some((
                                /// A contributor is dropped (process killed) after having made
                                /// this number of contributions.
                                after_contributions: 10,
                            )),
                            // (Optional) Configure when contributor will start.
                            // Possible values: `RoundStart`, `CeremonyStart`,
                            // `AfterRoundContributions(<StartAfterRoundContributions>)`.
                            // Default: `RoundStart`.
                            start: RoundStart,
                        ),
                        // Contributor 2
                        (
                            kind: CLI,
                            start: AfterRoundContributions((
                                // Start a ceremony participant after
                                // specified contributions have been made in
                                // the current round.
                                after_round_contributions: 10
                            ))
                        ),
                    ],
                ),
                // Round 2
                (
                    contributors: [
                        (
                            kind: CLI,
                        ),
                    ],
                ),
            ],
        ),
    ],
)
